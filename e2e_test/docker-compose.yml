version: '3.8'

services:
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    hostname: postgres-db
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "6000:6000"
    command: -p 6000
    networks:
      - morphemes-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 6000"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - morphemes-network
    depends_on:
      - postgres-db

  morphemes-extractor:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: morphemes-extractor
    depends_on:
      postgres-db:
        condition: service_healthy
    volumes:
      - ../lyrics:/app/lyrics
    environment:
      - PYTHONUNBUFFERED=1
      - JSON_DIR=/app/lyrics
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres-db
      - DB_PORT=6000
      - DB_NAME=postgres
    user: appuser
    networks:
      - morphemes-network

networks:
  morphemes-network:
    name: morphemes-network
    external: true

volumes:
  postgres_data:
    name: postgres_data 